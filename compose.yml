version: "3.9"
services:
  resources-postgres:
    image: postgres:16.2-alpine
    container_name: resources_db_postgres
    environment:
      POSTGRES_USER: ${RESOURCE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${RESOURCE_POSTGRES_PASSWORD}
      POSTGRES_DB: postgres
    healthcheck:
      test: pg_isready -d postgres -U postgres
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    ports:
      - 5432:5432
    volumes:
      - resources_postgres_data:/var/lib/postgresql/data
    networks:
      - resources

  resource-server:
    build: .
    image: messenger-spring:latest
    container_name: messenger-spring
    env_file: .env
    depends_on:
      resources-postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    ports:
      - 8080:8080
    networks:
      - resources
      - auth

  keycloak-postgres:
    image: postgres:16.2-alpine
    container_name: keycloak_db_postgres
    restart: on-failure
    environment:
      POSTGRES_USER: ${KEYCLOAK_POSTGRES_USER}
      POSTGRES_PASSWORD: ${KEYCLOAK_POSTGRES_PASSWORD}
      POSTGRES_DB: postgres
    healthcheck:
      test: pg_isready -d postgres -U postgres
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    ports:
      - 5432
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data
    networks:
      - auth

  keycloak:
    image: quay.io/keycloak/keycloak:20.0.2
    container_name: keycloak
    command:
      - start --auto-build --db postgres --hostname-strict-https false --hostname-strict false --proxy edge --http-enabled true --import-realm --spi-user-profile-legacy-user-profile-read-only-attributes *_RES_ACCESS_MODE
    environment:
      KC_DB_URL: jdbc:postgresql://keycloak-postgres:5432/postgres
      KC_DB_USERNAME: ${KEYCLOAK_POSTGRES_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_POSTGRES_PASSWORD}
      KC_DB_SCHEMA: public
      KC_FEATURES: preview
      KEYCLOAK_ADMIN: ${KEYCLOAK_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD}
    ports:
      - 8081:8080
    depends_on:
      keycloak-postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8080/realms/master"]
      start_period: 10s
      interval: 30s
      retries: 3
      timeout: 5s
    networks:
      - auth


networks:
  auth:
    driver: bridge
  resources:
    driver: bridge

volumes:
  keycloak_postgres_data:
    driver: local
  resources_postgres_data:
    driver: local